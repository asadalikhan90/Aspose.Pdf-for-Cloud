#import <Foundation/Foundation.h>
#import "ASPBaseResponse.h"
#import "ASPDocumentResponse.h"
#import "ASPTiffExportOptions.h"
#import "ASPAppendDocument.h"
#import "ASPAttachmentsResponse.h"
#import "ASPAttachmentResponse.h"
#import "ASPBookmarksResponse.h"
#import "ASPDocumentPropertiesResponse.h"
#import "ASPDocumentPropertyResponse.h"
#import "ASPDocumentProperty.h"
#import "ASPFieldsResponse.h"
#import "ASPFields.h"
#import "ASPField.h"
#import "ASPFieldResponse.h"
#import "ASPMergeDocuments.h"
#import "ASPDocumentPagesResponse.h"
#import "ASPWordCountResponse.h"
#import "ASPAnnotationsResponse.h"
#import "ASPAnnotationResponse.h"
#import "ASPTextItemsResponse.h"
#import "ASPTextItemResponse.h"
#import "ASPTextFormatResponse.h"
#import "ASPImagesResponse.h"
#import "ASPImageResponse.h"
#import "ASPBarcodeResponseList.h"
#import "ASPLinkAnnotationsResponse.h"
#import "ASPLinkAnnotationResponse.h"
#import "ASPPageTextReplaceResponse.h"
#import "ASPTextReplace.h"
#import "ASPTextReplaceListRequest.h"
#import "ASPSignature.h"
#import "ASPStamp.h"
#import "ASPDocumentTextReplaceResponse.h"
#import "ASPSplitResultResponse.h"
#import "ASPObject.h"
#import "ASPApiClient.h"

/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Do not edit the class manually.
 */

@interface ASPPdfApi: NSObject

@property(nonatomic, assign)ASPApiClient *apiClient;

-(instancetype) initWithApiClient:(ASPApiClient *)apiClient;
-(void) addHeader:(NSString*)value forKey:(NSString*)key;
-(unsigned long) requestQueueSize;
+(ASPPdfApi*) apiWithHeader:(NSString*)headerValue key:(NSString*)key;
///
///
/// Convert document from request content to format specified.
///
///
/// @param file
/// @param format The format to convert.
/// @param replaceResourcesHostTo
/// @param outPath Path to save result
///
///
/// @return NSURL*
-(NSNumber*) putConvertDocumentWithCompletionBlock :(NSURL*) file
                                             format:(NSString*) format
                             replaceResourcesHostTo:(NSString*) replaceResourcesHostTo
                                            outPath:(NSString*) outPath

                                  completionHandler: (void (^)(NSURL* output, NSError* error))completionBlock;
    

///
///
/// Read common document info.
///
///
/// @param name The document name.
/// @param storage The document storage.
/// @param folder The document folder.
///
///
/// @return ASPBaseResponse*
-(NSNumber*) getDocumentWithCompletionBlock :(NSString*) name
                                     storage:(NSString*) storage
                                      folder:(NSString*) folder

                           completionHandler: (void (^)(ASPBaseResponse* output, NSError* error))completionBlock;



///
///
/// Convert document to specified format
/// 
///
/// @param name The document name.
/// @param format Convert document to this format
/// @param outPath 
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return NSURL*
-(NSNumber*) getDocumentWithFormatWithCompletionBlock :(NSString*) name 
     format:(NSString*) format 
     outPath:(NSString*) outPath 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(NSURL* output, NSError* error))completionBlock;
    


///
///
/// Create new document.
/// 
///
/// @param name The new document name.
/// @param templateFile The template file server path if defined.
/// @param dataFile The data file path (for xml template only).
/// @param templateType The template type, can be xml or html.
/// @param storage The document storage.
/// @param folder The new document folder.
/// 
///
/// @return ASPDocumentResponse*
-(NSNumber*) putCreateDocumentWithCompletionBlock :(NSString*) name 
     templateFile:(NSString*) templateFile 
     dataFile:(NSString*) dataFile 
     templateType:(NSString*) templateType 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPDocumentResponse* output, NSError* error))completionBlock;
    


///
///
/// Save document as Tiff image.
/// 
///
/// @param name The document name.
/// @param exportOptions {TiffExportOptions} with tiff export options.
/// @param resultFile The resulting file.
/// @param brightness The image brightness.
/// @param compression Tiff compression. Possible values are: LZW, CCITT4, CCITT3, RLE, None.
/// @param colorDepth Image color depth. Possible valuse are: Default, Format8bpp, Format4bpp, Format1bpp.
/// @param leftMargin Left image margin.
/// @param rightMargin Right image margin.
/// @param topMargin Top image margin.
/// @param bottomMargin Bottom image margin.
/// @param orientation Image orientation. Possible values are: None, Landscape, Portait.
/// @param skipBlankPages Skip blank pages flag.
/// @param width Image width.
/// @param height Image height.
/// @param xResolution Horizontal resolution.
/// @param yResolution Vertical resolution.
/// @param pageIndex Start page to export.
/// @param pageCount Number of pages to export.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPBaseResponse*
-(NSNumber*) putDocumentSaveAsTiffWithCompletionBlock :(NSString*) name 
     exportOptions:(ASPTiffExportOptions*) exportOptions 
     resultFile:(NSString*) resultFile 
     brightness:(NSNumber*) brightness 
     compression:(NSString*) compression 
     colorDepth:(NSString*) colorDepth 
     leftMargin:(NSNumber*) leftMargin 
     rightMargin:(NSNumber*) rightMargin 
     topMargin:(NSNumber*) topMargin 
     bottomMargin:(NSNumber*) bottomMargin 
     orientation:(NSString*) orientation 
     skipBlankPages:(NSNumber*) skipBlankPages 
     width:(NSNumber*) width 
     height:(NSNumber*) height 
     xResolution:(NSNumber*) xResolution 
     yResolution:(NSNumber*) yResolution 
     pageIndex:(NSNumber*) pageIndex 
     pageCount:(NSNumber*) pageCount 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPBaseResponse* output, NSError* error))completionBlock;
    


///
///
/// Append document to existing one.
/// 
///
/// @param name The original document name.
/// @param appendDocument {AppendDocument} with the append document data.
/// @param appendFile Append file server path.
/// @param startPage Appending start page.
/// @param endPage Appending end page.
/// @param storage The documents storage.
/// @param folder The original document folder.
/// 
///
/// @return ASPDocumentResponse*
-(NSNumber*) postAppendDocumentWithCompletionBlock :(NSString*) name 
     appendDocument:(ASPAppendDocument*) appendDocument 
     appendFile:(NSString*) appendFile 
     startPage:(NSNumber*) startPage 
     endPage:(NSNumber*) endPage 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPDocumentResponse* output, NSError* error))completionBlock;
    


///
///
/// Read document attachments info.
/// 
///
/// @param name The document name.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPAttachmentsResponse*
-(NSNumber*) getDocumentAttachmentsWithCompletionBlock :(NSString*) name 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPAttachmentsResponse* output, NSError* error))completionBlock;
    


///
///
/// Read document attachment info by its index.
/// 
///
/// @param name The document name.
/// @param attachmentIndex The attachment index.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPAttachmentResponse*
-(NSNumber*) getDocumentAttachmentByIndexWithCompletionBlock :(NSString*) name 
     attachmentIndex:(NSNumber*) attachmentIndex 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPAttachmentResponse* output, NSError* error))completionBlock;
    


///
///
/// Download document attachment content by its index.
///
///
/// @param name The document name.
/// @param attachmentIndex The attachment index.
/// @param storage The document storage.
/// @param folder The document folder.
///
///
/// @return ASPBaseResponse*
-(NSNumber*) getDownloadDocumentAttachmentByIndexWithCompletionBlock :(NSString*) name
                                                      attachmentIndex:(NSNumber*) attachmentIndex
                                                              storage:(NSString*) storage
                                                               folder:(NSString*) folder

                                                    completionHandler: (void (^)(ASPBaseResponse* output, NSError* error))completionBlock;
    


///
///
/// Read document bookmarks.
/// 
///
/// @param name The document name.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPBookmarksResponse*
-(NSNumber*) getDocumentBookmarksWithCompletionBlock :(NSString*) name 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPBookmarksResponse* output, NSError* error))completionBlock;
    


///
///
/// Read document bookmark/bookmarks (including children).
/// 
///
/// @param name The document name.
/// @param bookmarkPath The bookmark path.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPBaseResponse*
-(NSNumber*) getDocumentBookmarksChildrenWithCompletionBlock :(NSString*) name 
     bookmarkPath:(NSString*) bookmarkPath 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPBaseResponse* output, NSError* error))completionBlock;
    


///
///
/// Read document properties.
/// 
///
/// @param name 
/// @param storage 
/// @param folder 
/// 
///
/// @return ASPDocumentPropertiesResponse*
-(NSNumber*) getDocumentPropertiesWithCompletionBlock :(NSString*) name 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPDocumentPropertiesResponse* output, NSError* error))completionBlock;
    


///
///
/// Delete document properties.
/// 
///
/// @param name 
/// @param storage 
/// @param folder 
/// 
///
/// @return ASPBaseResponse*
-(NSNumber*) deletePropertiesWithCompletionBlock :(NSString*) name 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPBaseResponse* output, NSError* error))completionBlock;
    


///
///
/// Read document property by name.
/// 
///
/// @param name 
/// @param propertyName 
/// @param storage 
/// @param folder 
/// 
///
/// @return ASPDocumentPropertyResponse*
-(NSNumber*) getDocumentPropertyWithCompletionBlock :(NSString*) name 
     propertyName:(NSString*) propertyName 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPDocumentPropertyResponse* output, NSError* error))completionBlock;
    


///
///
/// Add/update document property.
/// 
///
/// @param name 
/// @param propertyName 
/// @param _property 
/// @param storage 
/// @param folder 
/// 
///
/// @return ASPDocumentPropertyResponse*
-(NSNumber*) putSetPropertyWithCompletionBlock :(NSString*) name 
     propertyName:(NSString*) propertyName 
     _property:(ASPDocumentProperty*) _property 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPDocumentPropertyResponse* output, NSError* error))completionBlock;
    


///
///
/// Delete document property.
/// 
///
/// @param name 
/// @param propertyName 
/// @param storage 
/// @param folder 
/// 
///
/// @return ASPBaseResponse*
-(NSNumber*) deletePropertyWithCompletionBlock :(NSString*) name 
     propertyName:(NSString*) propertyName 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPBaseResponse* output, NSError* error))completionBlock;
    


///
///
/// Get document fields.
/// 
///
/// @param name The document name.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPFieldsResponse*
-(NSNumber*) getFieldsWithCompletionBlock :(NSString*) name 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPFieldsResponse* output, NSError* error))completionBlock;
    


///
///
/// Update fields.
/// 
///
/// @param name The document name.
/// @param fields {Fields} with the fields data.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPFieldsResponse*
-(NSNumber*) putUpdateFieldsWithCompletionBlock :(NSString*) name 
     fields:(ASPFields*) fields 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPFieldsResponse* output, NSError* error))completionBlock;
    


///
///
/// Create field.
/// 
///
/// @param name The document name.
/// @param page Document page number.
/// @param field {Field} with the field data.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPBaseResponse*
-(NSNumber*) postCreateFieldWithCompletionBlock :(NSString*) name 
     page:(NSNumber*) page 
     field:(ASPField*) field 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPBaseResponse* output, NSError* error))completionBlock;
    


///
///
/// Get document field by name.
/// 
///
/// @param name The document name.
/// @param fieldName The field name/
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPFieldResponse*
-(NSNumber*) getFieldWithCompletionBlock :(NSString*) name 
     fieldName:(NSString*) fieldName 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPFieldResponse* output, NSError* error))completionBlock;
    


///
///
/// Update field.
/// 
///
/// @param name The document name.
/// @param field {Field} with the field data.
/// @param fieldName 
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPFieldResponse*
-(NSNumber*) putUpdateFieldWithCompletionBlock :(NSString*) name 
     field:(ASPField*) field 
     fieldName:(NSString*) fieldName 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPFieldResponse* output, NSError* error))completionBlock;
    


///
///
/// Merge a list of documents.
/// 
///
/// @param name Resulting documen name.
/// @param mergeDocuments {MergeDocuments} with a list of documents.
/// @param storage Resulting document storage.
/// @param folder Resulting document folder.
/// 
///
/// @return ASPDocumentResponse*
-(NSNumber*) putMergeDocumentsWithCompletionBlock :(NSString*) name 
     mergeDocuments:(ASPMergeDocuments*) mergeDocuments 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPDocumentResponse* output, NSError* error))completionBlock;
    


///
///
/// Read document pages info.
/// 
///
/// @param name The document name.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPDocumentPagesResponse*
-(NSNumber*) getPagesWithCompletionBlock :(NSString*) name 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPDocumentPagesResponse* output, NSError* error))completionBlock;
    


///
///
/// Add new page to end of the document.
/// 
///
/// @param name The document name.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPDocumentPagesResponse*
-(NSNumber*) putAddNewPageWithCompletionBlock :(NSString*) name 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPDocumentPagesResponse* output, NSError* error))completionBlock;
    


///
///
/// Get number of words per document page.
/// 
///
/// @param name The document name.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPWordCountResponse*
-(NSNumber*) getWordsPerPageWithCompletionBlock :(NSString*) name 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPWordCountResponse* output, NSError* error))completionBlock;
    


///
///
/// Read document page info.
///
///
/// @param name The document name.
/// @param pageNumber The page number.
/// @param storage The document storage.
/// @param folder The document folder.
///
///
/// @return ASPBaseResponse*
-(NSNumber*) getPageWithCompletionBlock :(NSString*) name
                              pageNumber:(NSNumber*) pageNumber
                                 storage:(NSString*) storage
                                  folder:(NSString*) folder

                       completionHandler: (void (^)(ASPBaseResponse* output, NSError* error))completionBlock;


///
///
/// Get page in specified format.
/// 
///
/// @param name The document name.
/// @param pageNumber The page number.
/// @param format The page format.
/// @param width The page width.
/// @param height The page height.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return NSURL*
-(NSNumber*) getPageWithFormatWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     format:(NSString*) format 
     width:(NSNumber*) width 
     height:(NSNumber*) height 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(NSURL* output, NSError* error))completionBlock;
    


///
///
/// Delete document page by its number.
/// 
///
/// @param name The document name.
/// @param pageNumber The page number.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPBaseResponse*
-(NSNumber*) deletePageWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPBaseResponse* output, NSError* error))completionBlock;
    


///
///
/// Read documant page annotations.
/// 
///
/// @param name The document name.
/// @param pageNumber The page number.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPAnnotationsResponse*
-(NSNumber*) getPageAnnotationsWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPAnnotationsResponse* output, NSError* error))completionBlock;
    


///
///
/// Read document page annotation by its number.
/// 
///
/// @param name The document name.
/// @param pageNumber The page number.
/// @param annotationNumber The annotation number.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPAnnotationResponse*
-(NSNumber*) getPageAnnotationWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     annotationNumber:(NSNumber*) annotationNumber 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPAnnotationResponse* output, NSError* error))completionBlock;
    


///
///
/// Read page fragments.
/// 
///
/// @param name 
/// @param pageNumber 
/// @param withEmpty 
/// @param storage 
/// @param folder 
/// 
///
/// @return ASPTextItemsResponse*
-(NSNumber*) getFragmentsWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     withEmpty:(NSString*) withEmpty 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPTextItemsResponse* output, NSError* error))completionBlock;
    


///
///
/// Read page fragment.
/// 
///
/// @param name 
/// @param pageNumber 
/// @param fragmentNumber 
/// @param withEmpty 
/// @param storage 
/// @param folder 
/// 
///
/// @return ASPTextItemsResponse*
-(NSNumber*) getFragmentWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     fragmentNumber:(NSNumber*) fragmentNumber 
     withEmpty:(NSString*) withEmpty 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPTextItemsResponse* output, NSError* error))completionBlock;
    


///
///
/// Read fragment segments.
/// 
///
/// @param name 
/// @param pageNumber 
/// @param fragmentNumber 
/// @param withEmpty 
/// @param storage 
/// @param folder 
/// 
///
/// @return ASPTextItemsResponse*
-(NSNumber*) getSegmentsWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     fragmentNumber:(NSNumber*) fragmentNumber 
     withEmpty:(NSString*) withEmpty 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPTextItemsResponse* output, NSError* error))completionBlock;
    


///
///
/// Read segment.
/// 
///
/// @param name 
/// @param pageNumber 
/// @param fragmentNumber 
/// @param segmentNumber 
/// @param storage 
/// @param folder 
/// 
///
/// @return ASPTextItemResponse*
-(NSNumber*) getSegmentWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     fragmentNumber:(NSNumber*) fragmentNumber 
     segmentNumber:(NSNumber*) segmentNumber 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPTextItemResponse* output, NSError* error))completionBlock;
    


///
///
/// Read segment text format.
/// 
///
/// @param name 
/// @param pageNumber 
/// @param fragmentNumber 
/// @param segmentNumber 
/// @param storage 
/// @param folder 
/// 
///
/// @return ASPTextFormatResponse*
-(NSNumber*) getSegmentTextFormatWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     fragmentNumber:(NSNumber*) fragmentNumber 
     segmentNumber:(NSNumber*) segmentNumber 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPTextFormatResponse* output, NSError* error))completionBlock;
    


///
///
/// Read page fragment text format.
/// 
///
/// @param name 
/// @param pageNumber 
/// @param fragmentNumber 
/// @param storage 
/// @param folder 
/// 
///
/// @return ASPTextFormatResponse*
-(NSNumber*) getFragmentTextFormatWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     fragmentNumber:(NSNumber*) fragmentNumber 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPTextFormatResponse* output, NSError* error))completionBlock;
    


///
///
/// Read document images.
/// 
///
/// @param name The document name.
/// @param pageNumber The page number.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPImagesResponse*
-(NSNumber*) getImagesWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPImagesResponse* output, NSError* error))completionBlock;
    

///
///
/// Read document image by number.
///
///
/// @param name The document name.
/// @param pageNumber The page number.
/// @param imageNumber The image number.
/// @param storage The document storage.
/// @param folder The document folder.
///
///
/// @return ASPBaseResponse*
-(NSNumber*) getImageWithCompletionBlock :(NSString*) name
                               pageNumber:(NSNumber*) pageNumber
                              imageNumber:(NSNumber*) imageNumber
                                  storage:(NSString*) storage
                                   folder:(NSString*) folder

                        completionHandler: (void (^)(ASPBaseResponse* output, NSError* error))completionBlock;


///
///
/// Get image in specified format.
/// 
///
/// @param name The document name.
/// @param pageNumber The page number.
/// @param imageNumber The image number.
/// @param format The image format.
/// @param width The image width.
/// @param height The image height.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return NSURL*
-(NSNumber*) getImageWithFormatWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     imageNumber:(NSNumber*) imageNumber 
     format:(NSString*) format 
     width:(NSNumber*) width 
     height:(NSNumber*) height 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(NSURL* output, NSError* error))completionBlock;
    


///
///
/// Replace document image.
/// 
///
/// @param name The document name.
/// @param pageNumber The page number.
/// @param imageNumber The image number.
/// @param imageFile Path to image file if specified. Request content is used otherwise.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPImageResponse*
-(NSNumber*) postReplaceImageWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     imageNumber:(NSNumber*) imageNumber 
     imageFile:(NSString*) imageFile 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPImageResponse* output, NSError* error))completionBlock;
    


///
///
/// Recognize barcodes.
/// 
///
/// @param name Document name.
/// @param pageNumber Page number.
/// @param imageNumber Image number.
/// @param storage Document storage.
/// @param folder Document folder.
/// 
///
/// @return ASPBarcodeResponseList*
-(NSNumber*) getExtractBarcodesWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     imageNumber:(NSNumber*) imageNumber 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPBarcodeResponseList* output, NSError* error))completionBlock;
    


///
///
/// Read document page link annotations.
/// 
///
/// @param name The document name.
/// @param pageNumber The page number.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPLinkAnnotationsResponse*
-(NSNumber*) getPageLinkAnnotationsWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPLinkAnnotationsResponse* output, NSError* error))completionBlock;
    


///
///
/// Read document page link annotation by its index.
/// 
///
/// @param name The document name.
/// @param pageNumber The page number.
/// @param linkIndex The link index.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPLinkAnnotationResponse*
-(NSNumber*) getPageLinkAnnotationByIndexWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     linkIndex:(NSNumber*) linkIndex 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPLinkAnnotationResponse* output, NSError* error))completionBlock;
    


///
///
/// Move page to new position.
/// 
///
/// @param name The document name.
/// @param pageNumber The page number.
/// @param newIndex The new page position/index.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPBaseResponse*
-(NSNumber*) postMovePageWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     newIndex:(NSNumber*) newIndex 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPBaseResponse* output, NSError* error))completionBlock;
    


///
///
/// Page's replace text method.
/// 
///
/// @param name 
/// @param pageNumber 
/// @param textReplace 
/// @param storage 
/// @param folder 
/// 
///
/// @return ASPPageTextReplaceResponse*
-(NSNumber*) postPageReplaceTextWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     textReplace:(ASPTextReplace*) textReplace 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPPageTextReplaceResponse* output, NSError* error))completionBlock;
    


///
///
/// Page's replace text method.
/// 
///
/// @param name 
/// @param pageNumber 
/// @param textReplaceListRequest 
/// @param storage 
/// @param folder 
/// 
///
/// @return ASPPageTextReplaceResponse*
-(NSNumber*) postPageReplaceTextListWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     textReplaceListRequest:(ASPTextReplaceListRequest*) textReplaceListRequest 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPPageTextReplaceResponse* output, NSError* error))completionBlock;
    


///
///
/// Sign page.
/// 
///
/// @param name The document name.
/// @param pageNumber The page number.
/// @param signature {Signature} with the signature data.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPBaseResponse*
-(NSNumber*) postSignPageWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     signature:(ASPSignature*) signature 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPBaseResponse* output, NSError* error))completionBlock;
    


///
///
/// Add page stamp.
/// 
///
/// @param name The document name.
/// @param pageNumber The page number.
/// @param stamp {Stamp} with data.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPBaseResponse*
-(NSNumber*) putPageAddStampWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     stamp:(ASPStamp*) stamp 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPBaseResponse* output, NSError* error))completionBlock;
    


///
///
/// Read page text items.
/// 
///
/// @param name 
/// @param pageNumber 
/// @param withEmpty 
/// @param storage 
/// @param folder 
/// 
///
/// @return ASPTextItemsResponse*
-(NSNumber*) getPageTextItemsWithCompletionBlock :(NSString*) name 
     pageNumber:(NSNumber*) pageNumber 
     withEmpty:(NSString*) withEmpty 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPTextItemsResponse* output, NSError* error))completionBlock;
    


///
///
/// Document's replace text method.
/// 
///
/// @param name 
/// @param textReplace 
/// @param storage 
/// @param folder 
/// 
///
/// @return ASPDocumentTextReplaceResponse*
-(NSNumber*) postDocumentReplaceTextWithCompletionBlock :(NSString*) name 
     textReplace:(ASPTextReplace*) textReplace 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPDocumentTextReplaceResponse* output, NSError* error))completionBlock;
    


///
///
/// Document's replace text method.
/// 
///
/// @param name 
/// @param textReplaceListRequest 
/// @param storage 
/// @param folder 
/// 
///
/// @return ASPDocumentTextReplaceResponse*
-(NSNumber*) postDocumentReplaceTextListWithCompletionBlock :(NSString*) name 
     textReplaceListRequest:(ASPTextReplaceListRequest*) textReplaceListRequest 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPDocumentTextReplaceResponse* output, NSError* error))completionBlock;
    


///
///
/// Sign document.
/// 
///
/// @param name The document name.
/// @param signature {Signature} with signature data.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPBaseResponse*
-(NSNumber*) postSignDocumentWithCompletionBlock :(NSString*) name 
     signature:(ASPSignature*) signature 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPBaseResponse* output, NSError* error))completionBlock;
    


///
///
/// Split document to parts.
/// 
///
/// @param name Document name.
/// @param format Resulting documents format.
/// @param from Start page if defined.
/// @param to End page if defined.
/// @param storage The document storage.
/// @param folder The document folder.
/// 
///
/// @return ASPSplitResultResponse*
-(NSNumber*) postSplitDocumentWithCompletionBlock :(NSString*) name 
     format:(NSString*) format 
     from:(NSNumber*) from 
     to:(NSNumber*) to 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPSplitResultResponse* output, NSError* error))completionBlock;
    


///
///
/// Read document text items.
/// 
///
/// @param name 
/// @param withEmpty 
/// @param storage 
/// @param folder 
/// 
///
/// @return ASPTextItemsResponse*
-(NSNumber*) getTextItemsWithCompletionBlock :(NSString*) name 
     withEmpty:(NSString*) withEmpty 
     storage:(NSString*) storage 
     folder:(NSString*) folder 
    
    completionHandler: (void (^)(ASPTextItemsResponse* output, NSError* error))completionBlock;
    



@end
